name: Build

on:
  push:
    branches: [main]

jobs:
  build-win:
    name: Build Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@master
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
            version: "18.1.8"
      - name: Download Toolchain
        id: toolchain-download
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: x86_64-pc-windows-gnu
          toolchain: stable
          rustflags: "" # i dont want warnings to be errors
      - name: Compile
        id: compile
        run: cargo build --release
        env:
          LIBCLANG_PATH: ${{ env.LLVM_PATH }}/lib
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: audiopipe_win
          path: target/release/audiopipe.exe
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@master
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
            version: "18.1.8"
      - name: Download Toolchain
        id: toolchain-download
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: x86_64-unknown-linux-gnu
          toolchain: stable
          rustflags: "" # i dont want warnings to be errors
      - name: Install Dependencies
        run: sudo apt-get install -y alsa libasound2-dev libudev-dev
      - name: Compile
        id: compile
        run: cargo build --release
        env:
          LIBCLANG_PATH: ${{ env.LLVM_PATH }}/lib
          PKG_CONFIG_PATH: /usr/lib/pkgconfig
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: audiopipe_linux
          path: target/release/audiopipe
  build-mac:
    name: Build MacOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@master
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
            version: "18.1.8"
      - name: Download Toolchain
        id: toolchain-download
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: x86_64-apple-darwin,aarch64-apple-darwin
          toolchain: stable
          rustflags: "" # i dont want warnings to be errors
      - name: Compile (x86_64)
        id: compile_x86_64
        run: cargo build --release --target x86_64-apple-darwin
        env:
          LIBCLANG_PATH: ${{ env.LLVM_PATH }}/lib
      - name: Compile (arm64)
        id: compile_arm64
        run: cargo build --release --target aarch64-apple-darwin
        env:
          LIBCLANG_PATH: ${{ env.LLVM_PATH }}/lib
      - name: Make universal binary
        id: make_universal
        run: lipo -create -output audiopipe target/x86_64-apple-darwin/release/audiopipe target/aarch64-apple-darwin/release/audiopipe
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: audiopipe_mac
          path: audiopipe
